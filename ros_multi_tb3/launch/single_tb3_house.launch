<launch>
  <arg name="model" default="waffle_pi" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="move_forward_only" default="false"/>
  <arg name="configuration_basename" default="turtlebot3_lds_2d.lua"/>

  
  <arg name='first_tb3' default="tb3_0"/>
  <arg name="first_tb3_x_pos" default="0.9"/>
  <arg name="first_tb3_y_pos" default=" 1.7"/>
  <arg name="first_tb3_z_pos" default=" 0.0"/>
  <arg name="first_tb3_yaw"   default=" 0.0"/>


  <!-- launch gazebos from the data -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find ros_multi_tb3)/worlds/turtlebot3_house_mod.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>  

  <!-- spawn the robots and related information -->
    
  <!-- <param name="robot_description" command="$(find xacro)/xacro $(find ros_multi_tb3)/urdf/turtlebot3_$(arg model)_tb3.urdf.xacro tf_prefix:=$(arg first_tb3)"/> -->
<!-- ################################################################################################# -->
  <group ns = "$(arg first_tb3)">
    <param name="robot_description" command="$(find xacro)/xacro $(find ros_multi_tb3)/urdf/turtlebot3_waffle_pi.urdf.xacro botname:=$(arg first_tb3)" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg first_tb3)" />
    </node>
    
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg first_tb3) -x $(arg first_tb3_x_pos) -y $(arg first_tb3_y_pos) -z $(arg first_tb3_z_pos) -Y $(arg first_tb3_yaw) -param robot_description" />

<!-- gmapping for turtlebot 1 -->
    <node pkg="gmapping" type="slam_gmapping" name="turtlebot3_slam_gmapping" output="screen">
      <param name="base_frame" value="$(arg first_tb3)/base_footprint"/>
      <param name="odom_frame" value="$(arg first_tb3)/odom"/>
      <param name="map_frame"  value="$(arg first_tb3)/map"/>
      <rosparam command="load" file="$(find ros_multi_tb3)/configuration/gmapping_params.yaml" />
    </node>

<!-- move base for turtlebot 1 -->
    <include file="$(find ros_multi_tb3)/launch/includes/move_base.launch">
      <arg name="model" value="$(arg model)" />
      <arg name="move_forward_only" value="$(arg move_forward_only)"/>
      <arg name="cmd_vel_topic" value="/$(arg first_tb3)/cmd_vel"/>
      <arg name="namespace" value="$(arg first_tb3)"/>
    </include>
  </group>

  <node pkg="explore_lite" type="explore" respawn="true" name="explore" output="screen">
      <rosparam file="$(find tb3_navigations)/param/explore_lite.yaml" command="load" />
  </node>
  
<node pkg="tf" type="static_transform_publisher" name="world_to_mergedmap_tf_broadcaster"  args="0.385 0.385 0 0 0 0 world map 20"/>
<!-- <node pkg="tf" type="static_transform_publisher" name="world_to_mergedmap_tf_broadcaster"  args="0 0 0 0 0 0 world map 100"/> -->
<node pkg="tf" type="static_transform_publisher" name="world_to_$(arg first_tb3)_tf_broadcaster"  args="0 0 0 0 0 0 /map /$(arg first_tb3)/map 20"/>

  <!-- rviz -->
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find ros_multi_tb3)/rviz/single_tb3_gmapping.rviz"/>

</launch>
